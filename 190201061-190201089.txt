login.js
const mysql = require('mysql')

const express = require('express')
const exphbs = require('express-handlebars')
const bodyParser = require('body-parser')
require('dotenv').config()

const encoder = bodyParser.urlencoded()
const app = express()
const port = process.env.PORT || 5000
app.listen(port)
const adminun = 'admin123'
const adminps = '123admin'
app.use(bodyParser.urlencoded({ extended: false }))
app.use(bodyParser.json())

app.use(express.static('public'))
app.engine('hbs', exphbs.engine({ extname: 'hbs' }))
app.set('view engine', 'hbs')

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: 'BloodyHell58',
  database: 'yazlab1proje3',
  multipleStatements: true,
})
connection.connect(function (error) {
  if (error) throw error
  else console.log('Bağlandı')
})

//ROUTERLAR
app.get('/kayit', function (req, res) {
  //kayıt linki
  res.sendFile(__dirname + '/kayit.html')
})
app.post('/kayit', function (req, res) {
  //kayıt sayfasına geçme
  res.redirect('/kayit')
})

app.get('/kayit.html', function (req, res) {
  //kayıt linki
  res.sendFile(__dirname + '/kayit.html')
})
app.post('/kayit.html', encoder, function (req, res) {
  //kayıt işlemi
  var username = req.body.username
  var password = req.body.password
  var passwordagain = req.body.passwordagain
  if (password == passwordagain) {
    connection.query(
      'INSERT INTO kullanicilar SET kullaniciAd = ?, kullaniciSifre = ?',
      [username, password],
      function (error) {
        if (error) throw error
        console.log('Kayıt Yapıldı')
      },
    )
    res.redirect('/')
  } else {
    console.log('Lütfen aynı şifreyi tekrar giriniz!')
    res.redirect('/kayit')
  }
})

app.get('/', function (req, res) {
  //başlangıç
  res.sendFile(__dirname + '/index.html')
})

app.post('/', encoder, function (req, res) {
  //login işlemi
  var username = req.body.username
  var password = req.body.password
  connection.query(
    'SELECT kullaniciId FROM kullanicilar where kullaniciAd = ? AND kullaniciSifre = ?',
    [username, password],
    function (error, results, fields) {
        
        
      if (username == adminun && password == adminps) {
        console.log('Admin girişi yapıldı.')
        app.set('view options', { layout: 'main' })
        res.redirect('/home')
      } else if (
        results.length > 0 &&
        username != adminun &&
        password != adminps
      ) {
        kullanId = results[0].kullaniciId;
        app.locals.id = kullanId;
        console.log('Giriş yapıldı.')
        res.redirect('/userhome/'+kullanId+'');
      } else {
        console.log('Kullanici adi veya şifre lazım')
        res.redirect("/");
      }
    },
  )
})
app.get('/userhome/:kullaniciId', function (req, res) {
    //Kullanıcı panele giriş
     connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE kullaniciId = ? ',[req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome',{layout: 'user',project: results});
              } else {
                console.log(error)
              }
            },
          ) 
  })

  app.post('/userhome/:kullaniciId', function (req, res) {//sorgu 1 kullanıcı
    let aranan = req.body.search;
    let seçilen = req.body.tag;
    if(seçilen == "Yazar" ){
        connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE ogrenciAd LIKE ? and kullaniciId = ?',["%"+aranan+"%",req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome', {layout: 'user', project: results })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Ders Adı" ){
        connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE dersAd LIKE ? and kullaniciId = ?',["%"+aranan+"%",req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome', {layout: 'user', project: results })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Başlık" ){
        connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE baslik LIKE ? and kullaniciId = ?',["%"+aranan+"%",req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome', {layout: 'user', project: results })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Anahtar Kelimeler" ){
        connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE anahtar LIKE ? and kullaniciId = ?',["%"+aranan+"%",req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome', {layout: 'user', project: results })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Dönem" ){
        connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE donem LIKE ? and kullaniciId = ?',["%"+aranan+"%",req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome', {layout: 'user', project: results })
              } else {
                console.log(error)
              }
            },
          )
    }
    
  })

  app.get('/userhome2/:kullaniciId', function (req, res) {
    //Kullanıcı panele giriş
     connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler WHERE kullaniciId = ? ',[req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome',{layout: 'user',project: results});
              } else {
                console.log(error)
              }
            },
          ) 
  })

  app.post('/userhome2/:kullaniciId', function (req, res) {//sorgu 2 kullanıcı
    
    let donem = req.body.dönem;
    let dersAd = req.body.ders;
    
        connection.query(
            'SELECT projeId, ogrenciAd, ogrenciSoyad, ogrenciNo, ogretimTur, dersAd, ozet,donem,baslik,anahtar,danisman,juri FROM projeler  WHERE donem LIKE ? AND dersAd LIKE ? AND kullaniciId = ?',["%"+donem+"%","%"+dersAd+"%",req.params.kullaniciId],
            function (error, results) {
              if (!error) {
                res.render('userhome',{layout: 'user',project: results});
              } else {
                console.log(error)
              }
            },
          )
    
    
  })


app.get('/home', function (req, res) {
  //Admin panele giriş
  connection.query(
    'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId)  ',
    function (error, results) {
      if (!error) {
        res.render('home', { user: results[0], project: results[1] })
      } else {
        console.log(error)
      }
    },
  )
})


app.get('/adduser', function (req, res) {
  //kullanıcı eklemeye giriş
  res.render('adduser')
})

app.post('/adduser', encoder, function (req, res) {
  //kullanıcı ekle
  var username = req.body.kullaniciAd
  var password = req.body.kullaniciSifre
  connection.query(
    'INSERT INTO kullanicilar SET kullaniciAd = ?, kullaniciSifre = ?',
    [username, password],
    function (error) {
      if (error) throw error
      else {
        console.log('Kayıt Yapıldı')
        res.render('adduser')
      }
    },
  )
})

app.get('/edituser/:kullaniciId', function (req, res) {
  //kullanıcı güncellemeye giriş
  connection.query(
    'SELECT * FROM kullanicilar where kullaniciId = ?',
    [req.params.kullaniciId],
    function (error, results) {
      if (!error) {
        res.render('edituser', { results })
      } else {
        console.log(error)
      }
    },
  )
})

app.post('/edituser/:kullaniciId', encoder, function (req, res) {
  //kullanıcı güncelle
  var username = req.body.kullaniciAd
  var password = req.body.kullaniciSifre
  connection.query(
    'UPDATE kullanicilar SET kullaniciAd = ?, kullaniciSifre = ? WHERE kullaniciId = ?',
    [username, password, req.params.kullaniciId],
    function (error) {
      if (error) throw error
      else {
        connection.query(
          'SELECT * FROM kullanicilar where kullaniciId = ?',
          [req.params.kullaniciId],
          function (error, results) {
            if (!error) {
              res.render('edituser', { results })
            } else {
              console.log(error)
            }
          },
        )
        console.log('Kullanıcı Güncellendi')
      }
    },
  )
})

app.get('/:kullaniciId', function (req, res) {
  //kullanıcı sil
  connection.query(
    'DELETE FROM kullanicilar where kullaniciId = ?',
    [req.params.kullaniciId],
    function (error, results) {
      if (!error) {
        res.redirect('home')
      } else {
        console.log(error)
      }
    },
  )
})

app.post('/home', function (req, res) {//sorgu 1 admin
    let aranan = req.body.search;
    let seçilen = req.body.tag;
    if(seçilen == "Yazar" ){
        connection.query(
            'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId) WHERE ogrenciAd LIKE ?',["%"+aranan+"%"],
            function (error, results) {
              if (!error) {
                res.render('home', { user: results[0], project: results[1] })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Ders Adı" ){
        connection.query(
            'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId) WHERE dersAd LIKE ?',["%"+aranan+"%"],
            function (error, results) {
              if (!error) {
                res.render('home', { user: results[0], project: results[1] })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Başlık" ){
        connection.query(
            'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId) WHERE baslik LIKE ?',["%"+aranan+"%"],
            function (error, results) {
              if (!error) {
                res.render('home', { user: results[0], project: results[1] })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Anahtar Kelimeler" ){
        connection.query(
            'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId) WHERE anahtar LIKE ?',["%"+aranan+"%"],
            function (error, results) {
              if (!error) {
                res.render('home', { user: results[0], project: results[1] })
              } else {
                console.log(error)
              }
            },
          )
    }else if (seçilen == "Dönem" ){
        connection.query(
            'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId) WHERE donem LIKE ?',["%"+aranan+"%"],
            function (error, results) {
              if (!error) {
                res.render('home', { user: results[0], project: results[1] })
              } else {
                console.log(error)
              }
            },
          )
    }
    
  })

  app.get('/home2', function (req, res) {
    //panele giriş
    connection.query(
      'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId)  ',
      function (error, results) {
        if (!error) {
          res.render('home', { user: results[0], project: results[1] })
        } else {
          console.log(error)
        }
      },
    )
  })

  app.post('/home2', function (req, res) {//sorgu 2 admin
    let kullaniciAd = req.body.kullanıcı;
    let donem = req.body.dönem;
    let dersAd = req.body.ders;
    
        connection.query(
            'SELECT * FROM kullanicilar; SELECT projeler.projeId, kullanicilar.kullaniciAd, projeler.ogrenciAd, projeler.ogrenciSoyad, projeler.ogrenciNo, projeler.ogretimTur, projeler.dersAd, projeler.ozet,projeler.donem,projeler.baslik,projeler.anahtar,projeler.danisman,projeler.juri FROM projeler JOIN kullanicilar ON (projeler.kullaniciId = kullanicilar.kullaniciId) WHERE kullaniciAd LIKE ? AND donem LIKE ? AND dersAd LIKE ?',["%"+kullaniciAd+"%","%"+donem+"%","%"+dersAd+"%"],
            function (error, results) {
              if (!error) {
                res.render('home', { user: results[0], project: results[1] })
              } else {
                console.log(error)
              }
            },
          )
    
    
  })

//ROUTERLAR BİTİŞ
////////////////////////////////////////////////////////
views/layouts/main.hbs
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Yönetim Paneli</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand">Yönetim Paneli</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/home">Ana Sayfa</a>
            <a class="nav-link active" aria-current="page" href="/">Çıkış Yap</a>
          </li>
        </ul>

        <form class="d-flex" method="POST" action="/home" novalidate>
          <input class="form-control me-2" type="search" placeholder="Ara" name="search" aria-label="Search">
          <input class="form-control me-2" type="search" placeholder="Kategori" name="tag" aria-label="Search">
          <button class="btn btn-outline-light" type="submit">Proje Ara</button> 
        </form>
        <form class="d-flex" method="POST" action="/home2" novalidate>
          <input class="form-control me-2" type="search" placeholder="Kullanıcı" name="kullanıcı" aria-label="Search">
          <input class="form-control me-2" type="search" placeholder="Dönem" name="dönem" aria-label="Search">
          <input class="form-control me-2" type="search" placeholder="Ders" name="ders" aria-label="Search">
          <button class="btn btn-outline-light" type="submit">Proje Ara</button>
        </form>

      </div>
    </div>
  </nav>

  <div class="container pt-5 pb-5">
      {{{body}}}
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
    crossorigin="anonymous"></script>
</body>

</html>
//////////////////////////////////////////////////////////
views/layouts/user.hbs
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Kullanıcı Paneli</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand">Kullanıcı Paneli</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/userhome/{{id}}">Ana Sayfa</a>
            <a class="nav-link active" aria-current="page" href="/">Çıkış Yap</a>
          </li>
        </ul>
        
        <form class="d-flex" method="POST" action="/userhome/{{id}}" novalidate>
          <input class="form-control me-2" type="search" placeholder="Ara" name="search" aria-label="Search">
          <input class="form-control me-2" type="search" placeholder="Kategori" name="tag" aria-label="Search">
          <button class="btn btn-outline-light" type="submit">Proje Ara</button> 
        </form>
        
        <form class="d-flex" method="POST" action="/userhome2/{{id}}" novalidate>
          
          <input class="form-control me-2" type="search" placeholder="Dönem" name="dönem" aria-label="Search">
          <input class="form-control me-2" type="search" placeholder="Ders" name="ders" aria-label="Search">
          <button class="btn btn-outline-light" type="submit">Proje Ara</button>
        </form>

      </div>
    </div>
  </nav>

  <div class="container pt-5 pb-5">
      {{{body}}}
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
    crossorigin="anonymous"></script>
</body>

</html>
//////////////////////////////////////////////
views/adduser.hbs
<form class="row g-3 needs-validation" method="POST" action="/adduser" novalidate>
  <div class="col-6">
    <div class="form-floating mb-3">
      <input type="text" class="form-control" id="floatingInput" value="{{this.kullaniciAd}}" placeholder="Kullanıcı Adı" name="kullaniciAd">
      <label for="floatingInput">Kullanıcı Adı</label>
    </div>
  </div>
  <div class="col-6">
    <div class="form-floating mb-3">
      <input type="text" class="form-control" id="floatingInput" value="{{this.kullaniciSifre}}" placeholder="Şifre" name="kullaniciSifre">
      <label for="floatingInput">Şifre</label>
    </div>
  </div>
  <div class="col-12 d-grid">
    <button class="btn btn-primary" type="submit">Oluştur</button>
  </div>
</form>
//////////////////////////////////////////////////
views/edituser.hbs
{{#each results}}
<form class="row g-3 needs-validation" method="POST" action="/edituser/{{this.kullaniciId}}" novalidate>
  <div class="col-6">
    <div class="form-floating mb-3">
      <input type="text" class="form-control" id="floatingInput" value="{{this.kullaniciAd}}" placeholder="Kullanıcı Adı" name="kullaniciAd">
      <label for="floatingInput">Kullanıcı Adı</label>
    </div>
  </div>
  <div class="col-6">
    <div class="form-floating mb-3">
      <input type="text" class="form-control" id="floatingInput" value="{{this.kullaniciSifre}}" placeholder="Şifre" name="kullaniciSifre">
      <label for="floatingInput">Şifre</label>
    </div>
  </div>
  <div class="col-12 d-grid">
    <button class="btn btn-primary" type="submit">Güncelle</button>
  </div>
</form>
{{/each}}
//////////////////////////////////////////////////////
views/home.hbs
<div class="row">
  <div class="col-6">
    <h1>Kullanıcılar</h1>
  </div>
  <div class="col-6 d-flex justify-content-end">
    <a href="/adduser" type="button" class="btn btn-primary align-self-center">Kullanıcı Ekle</a>
  </div>
</div>



<table class="table table-bordered">
  <thead class="thead-dark">
    <tr>
      <th scope="col">#</th>
      <th scope="col">Kullanıcı Adı</th>
      <th scope="col">Şifre</th>
      <th scope="col" class="text-end">İşlemler</th>
    </tr>
  </thead>
  <tbody>

    {{#each user}}
    <tr>
      <th scope="row">{{this.kullaniciId}}</th>
      <td>{{this.kullaniciAd}}</td>
      <td>{{this.kullaniciSifre}}</td>
      <td class="text-end">
        <a href="/edituser/{{this.kullaniciId}}" type="button" class="btn btn-light btn-small"><i class="bi bi-pencil"></i>
          Güncelle</a>
        <a href="/{{this.kullaniciId}}" type="button" class="btn btn-light btn-small"><i class="bi bi-person-x"></i> Sil</a>
      </td>
    </tr>
    {{/each}}

  </tbody>
</table>

<div class="row">
  <div class="col-6">
    <h1>Projeler</h1>
  </div>
</div>


<table class="table table-bordered">
  <thead class="thead-dark">
    <tr>
      <th scope="col">#</th>
      <th scope="col">Kullanıcı Adı</th>
      <th scope="col">Öğrenci Adı</th>
      <th scope="col">Öğrenci Soyadı</th>
      <th scope="col">Öğrenci No</th>
      <th scope="col">Öğretim Türü</th>
      <th scope="col">Ders Adı</th>
      <th scope="col">Özet</th>
      <th scope="col">Dönem</th>
      <th scope="col">Başlık</th>
      <th scope="col">Anahtar Kelimeler</th>
      <th scope="col">Danışmanlar</th>
      <th scope="col">Jüri</th>
    </tr>
  </thead>
  <tbody>

    {{#each project}}
    <tr>
      <th scope="row">{{this.projeId}}</th>
      <td>{{this.kullaniciAd}}</td>
      <td>{{this.ogrenciAd}}</td>
      <td>{{this.ogrenciSoyad}}</td>
      <td>{{this.ogrenciNo}}</td>
      <td>{{this.ogretimTur}}</td>
      <td>{{this.dersAd}}</td>
      <td>{{this.ozet}}</td>
      <td>{{this.donem}}</td>
      <td>{{this.baslik}}</td>
      <td>{{this.anahtar}}</td>
      <td>{{this.danisman}}</td>
      <td>{{this.juri}}</td>
    </tr>
    {{/each}}

  </tbody>
</table>
//////////////////////////////////////////////
views/userhome.hbs
<div class="row">
  <div class="col-6">
    <h1>Projeler</h1>
  </div>
</div>


<table class="table table-bordered">
  <thead class="thead-dark">
    <tr>
      <th scope="col">#</th>
      <th scope="col">Öğrenci Adı</th>
      <th scope="col">Öğrenci Soyadı</th>
      <th scope="col">Öğrenci No</th>
      <th scope="col">Öğretim Türü</th>
      <th scope="col">Ders Adı</th>
      <th scope="col">Özet</th>
      <th scope="col">Dönem</th>
      <th scope="col">Başlık</th>
      <th scope="col">Anahtar Kelimeler</th>
      <th scope="col">Danışmanlar</th>
      <th scope="col">Jüri</th>
    </tr>
  </thead>
  <tbody>

    {{#each project}}
    <tr>
      <th scope="row">{{this.projeId}}</th>
      <td>{{this.ogrenciAd}}</td>
      <td>{{this.ogrenciSoyad}}</td>
      <td>{{this.ogrenciNo}}</td>
      <td>{{this.ogretimTur}}</td>
      <td>{{this.dersAd}}</td>
      <td>{{this.ozet}}</td>
      <td>{{this.donem}}</td>
      <td>{{this.baslik}}</td>
      <td>{{this.anahtar}}</td>
      <td>{{this.danisman}}</td>
      <td>{{this.juri}}</td>
    </tr>
    {{/each}}

  </tbody>
</table>
///////////////////////////////////////////////////
index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proje3</title>
    <link rel="stylesheet" href="assets/style.css">
</head>
<body>
    <section class="box">
        <div class="design">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>
        <div class="form">
            <h2>Giriş Yap</h2>
            <form action="/" method="POST">
                <input type="text" name="username" class="input-field" placeholder="Kullanıcı Adı" />
                <input type="password" name="password" class="input-field" placeholder="Şifre" />
                <input type="submit" class="btn" value="Giriş Yap">
            </form>
            <form action="/kayit" method="POST">
                <input type="submit" class="btn" value="Kayıt Ol">
            </form>
        </div>
        
    </section>
</body>
</html>
////////////////////////////////////////////////////
kayit.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proje3</title>
    <link rel="stylesheet" href="assets/style.css">
</head>
<body>
    <section class="box">
        <div class="design">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>
        <div class="form">
            <h2>Kayıt Ol</h2>
            <form action="/kayit.html" method="POST">
                <input type="text" name="username" class="input-field" placeholder="Kullanıcı Adı" />
                <input type="password" name="password" class="input-field" placeholder="Şifre" />
                <input type="password" name="passwordagain" class="input-field" placeholder="Tekrar Şifre" />
                <input type="submit" class="btn" value="Kayıt Ol">
            </form>
            <form action="/" method="GET">
                <input type="submit" class="btn" value="Geri Dön">
            </form>
        </div>
    </section>
</body>
</html>
//////////////////////////////////////////////////
public/assets/style.css
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
    outline: none;
    border: none;
}

body{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: linear-gradient(-45deg,#7f379b,#ffa26c);
}

.box{
    width: 900px;
    height: 400px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #fff;
    box-shadow: 0 0 15px #00000033;
    border-radius: 15px;
    overflow: hidden;
}

.design{
    width: 50%;
    height: 100%;
    position: relative;
}

.design div:first-child{
    width: 190px;
    height: 90px;
    border-radius: 50px;
    background: linear-gradient(-90deg,#7f379b,#ff6a85);
    transform: rotate(45deg);
    position: absolute;
    top: -40px;
    left: 120px;
}

.design div:nth-child(2){
    width: 450px;
    height: 230px;
    border-radius: 200px;
    background: linear-gradient(-90deg,#7f379b,#ff6a85);
    transform: rotate(45deg);
    position: absolute;
    top: 0;
    left: -163px;
    border: 25px solid #e2c4e0;
}

.design div:nth-child(3){
    width: 190px;
    height: 70px;
    border-radius: 50px;
    background: linear-gradient(-90deg,#7f379b,#ff92a6);
    transform: rotate(45deg);
    position: absolute;
    bottom: 70px;
    left: -100px;
}

.design div:last-child{
    width: 190px;
    height: 70px;
    border-radius: 50px;
    background: linear-gradient(-90deg,#7f379b,#ffa26c);
    transform: rotate(45deg);
    position: absolute;
    bottom: -50px;
    left: 100px;
}

.form{
    width: 50%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: 0 75px;
}

.form h2{
    margin-bottom: 15px;
}

.input-field{
    width: 100%;
    height: 40px;
    border-radius: 5px;
    margin: 10px 0;
    padding: 15px;
    font-size: 1em;
    color: #000;
    background-color: #e2c4e0;
    letter-spacing: 1px;
}
.input-field::placeholder{
    color: #303030;
}

.btn{
    width: 300px;
    height: 40px;
    background-color: #7f379b;
    color: #fff;
    letter-spacing: 1px;
    font-size: 1em;
    margin-top: 15px;
    border-radius: 5px;
}